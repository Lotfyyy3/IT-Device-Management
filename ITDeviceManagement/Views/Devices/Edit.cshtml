@model ITDeviceManagement.Models.Device

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Device</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ID)

        <!-- Device Name Section -->
        <div class="form-group">
            @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Device Category Section -->
        <div class="form-group">
            @Html.LabelFor(model => model.DeviceCategoryID, "Device Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DeviceCategoryID", (SelectList)ViewBag.DeviceCategoryID, htmlAttributes: new { @class = "form-control", id = "deviceCategory", @disabled = "disabled" })
                @Html.HiddenFor(model => model.DeviceCategoryID) <!-- Hidden field to ensure the category ID is still submitted -->
                @Html.ValidationMessageFor(model => model.DeviceCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Acquisition Date Section -->
        <div class="form-group">
            @Html.LabelFor(model => model.AcquisitionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcquisitionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AcquisitionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Memo Section -->
        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Memo, new { @class = "form-control", rows = 3 })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Properties Section -->
        <h4>Properties</h4>
        <hr />
        <div id="propertiesContainer">
            @if (Model.DeviceProperties != null && Model.DeviceProperties.Any())
            {
                int index = 0;
                foreach (var deviceProperty in Model.DeviceProperties)
                {
                    <div class="form-group">
                        @Html.Label(deviceProperty.Property.PropertyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Hidden($"DeviceProperties[{index}].PropertyID", deviceProperty.PropertyID)
                            @Html.TextBox($"DeviceProperties[{index}].PropertyValue", deviceProperty.PropertyValue, new { @class = "form-control" })
                        </div>
                    </div>
                    index++;
                }
            }
        </div>

        <!-- Submit Button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
