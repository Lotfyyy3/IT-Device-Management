@model ITDeviceManagement.Models.Device

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Device</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Device Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.DeviceName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeviceName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Device Category -->
        <div class="form-group">
            @Html.LabelFor(model => model.DeviceCategoryID, "Device Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DeviceCategoryID", (SelectList)ViewBag.DeviceCategoryID, "Select a Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DeviceCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Acquisition Date -->
        <div class="form-group">
            @Html.LabelFor(model => model.AcquisitionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcquisitionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AcquisitionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Memo -->
        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Dynamic Properties Section -->
        <div id="propertiesSection">
            <!-- Properties will be loaded here dynamically -->
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
    $(document).ready(function() {
        $('#DeviceCategoryID').change(function() {
            var categoryId = $(this).val();
            if (categoryId) {
                $.ajax({
                    url: '@Url.Action("GetPropertiesByCategory", "Devices")',
                    type: 'GET',
                    data: { categoryId: categoryId },
                    success: function(data) {
                        $('#propertiesSection').empty(); // Clear previous properties
                        $.each(data, function(index, property) {
                            $('#propertiesSection').append(
                                '<div class="form-group">' +
                                '<label class="control-label col-md-2">' + property.PropertyDescription + '</label>' +
                                '<div class="col-md-10">' +
                                '<input type="text" name="DeviceProperties[' + index + '].PropertyValue" class="form-control" />' +
                                '<input type="hidden" name="DeviceProperties[' + index + '].PropertyID" value="' + property.ID + '" />' +
                                '</div>' +
                                '</div>'
                            );
                        });
                    },
                    error: function(xhr, status, error) {
                        console.log("AJAX error: " + status + ' - ' + error);
                    }
                });
            } else {
                $('#propertiesSection').empty(); // Clear properties if no category is selected
            }
        });
    });
    </script>

}
